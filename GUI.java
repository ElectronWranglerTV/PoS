
package project;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

public class GUI extends javax.swing.JPanel {

    private final Database Database;
    private final DefaultListModel<String> CustomerList = new DefaultListModel<>();
    private final DefaultListModel<String> ProductList = new DefaultListModel<>();
    private final DefaultListModel<String> OrderList = new DefaultListModel<>();
    private final DefaultListModel<String> COrderList = new DefaultListModel<>();
    private final ArrayList<Customer> Customers;
    private final ArrayList<Product> Products;
    private Customer SelectedCustomer;
    private Product SelectedProduct;
    private Order Order;
    private ArrayList<Order> Orders;
    private ArrayList<Order> COrders;
    /**
     * Creates new form NewJPanel
     */
    public GUI(Database Database) {
        initComponents();
        this.Database = Database;
        this.ComboCState.setSelectedIndex(-1);
        this.ComboOCustomer.setSelectedIndex(-1);
        this.ComboOProduct.setSelectedIndex(-1);
        this.ListCustomer.setModel(this.CustomerList);
        this.ListOOrders.setModel(this.OrderList);
        this.ListProducts.setModel(this.ProductList);
        this.Orders = new ArrayList<>();
        //Fetch customer list from DB
        this.Customers = Database.Customers();
        //Build DefaultListModel and ComboBox for customers
        for(Customer C : this.Customers){
            String ListString = C.LName() + ", " + C.FName().substring(0, 1) + ". (" + C.Zip() + ", " + C.State() + ")";
            CustomerList.addElement(ListString);
            C.ListString(ListString);
            this.ComboOCustomer.addItem(ListString);
        }
        //Fetch products from database
        this.Products = Database.Products();
        //Build DefaultListModel and Combobox for Products
        for(Product P : this.Products){
            ProductList.addElement(P.Name());
            this.ComboOProduct.addItem(P.Name());
        }
        //Enable combobox event listeners...AFTER we have populated them!
        ComboOCustomer.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {
                String I = ComboOCustomer.getSelectedItem().toString();
                for(Customer C : Customers){
                    if(C.ListString().equals(I)){
                        //Update customer information on the GUI
                        LabelOPhone.setText(C.Phone());
                        LabelOName.setText(C.LName() + ", " + C.FName());
                        LabelOZip.setText(String.valueOf(C.Zip()));
                        LabelOCity.setText(C.City());
                        LabelOStreet.setText(C.Street());
                        LabelOState.setText(C.State());
                        //Retrieve the customers orders from the DB
                        COrders = Database.Orders(C.ID());
                        //Display customer's orders on the GUI
                        COrderList.clear();
                        for(Order O : COrders){
                            COrderList.addElement(String.valueOf(O.ID()));
                        }
                        SelectedCustomer = C;
                        Order = null;
                    }
                }
            }
        });
        ComboOProduct.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {
                String I = ComboOProduct.getSelectedItem().toString();
                for(Product P : Products){
                    if(P.Name().equals(I)){
                        //Update product information on the GUI
                        LabelOPName.setText(P.Name());
                        LabelOPrice.setText(String.valueOf(P.Price()));
                        SelectedProduct = P;
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        TextOLength = new javax.swing.JTextField();
        Button_Submit = new javax.swing.JButton();
        Label_Customer = new javax.swing.JLabel();
        ComboOCustomer = new javax.swing.JComboBox<>();
        ComboOProduct = new javax.swing.JComboBox<>();
        Label_Product = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListOOrders = new javax.swing.JList<>();
        LabelOOTotal = new javax.swing.JLabel();
        ButtonOAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        LabelOName = new javax.swing.JLabel();
        LabelOPhone = new javax.swing.JLabel();
        LabelOStreet = new javax.swing.JLabel();
        LabelOZip = new javax.swing.JLabel();
        LabelOState = new javax.swing.JLabel();
        LabelOITotal = new javax.swing.JLabel();
        LabelOSummary = new javax.swing.JLabel();
        ButtonOFetch = new javax.swing.JButton();
        TextOWidth = new javax.swing.JTextField();
        LabelOStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        LabelOCity = new javax.swing.JLabel();
        LabelOPrice = new javax.swing.JLabel();
        LabelOPName = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        PanelProducts = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListProducts = new javax.swing.JList<>();
        ButtonPAdd = new javax.swing.JButton();
        ButtonPDelete = new javax.swing.JButton();
        TextPName = new javax.swing.JTextField();
        TextPPrice = new javax.swing.JTextField();
        LabelPStatus = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListCustomer = new javax.swing.JList<>();
        TextCFName = new javax.swing.JTextField();
        TextCLName = new javax.swing.JTextField();
        TextCSAddr = new javax.swing.JTextField();
        TextCCity = new javax.swing.JTextField();
        TextCZip = new javax.swing.JTextField();
        ComboCState = new javax.swing.JComboBox<>();
        ButtonCSave = new javax.swing.JButton();
        ButtonCClear = new javax.swing.JButton();
        ButtonCDelete = new javax.swing.JButton();
        TextCPhone = new javax.swing.JTextField();
        LabelCStatus = new javax.swing.JLabel();

        TextOLength.setColumns(10);
        TextOLength.setForeground(new java.awt.Color(127, 127, 127));
        TextOLength.setText("Enter Length");
        TextOLength.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextOLengthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextOLengthFocusLost(evt);
            }
        });

        Button_Submit.setText("Submit Order");
        Button_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_SubmitActionPerformed(evt);
            }
        });

        Label_Customer.setText("Customer");

        Label_Product.setText("Product");

        ListOOrders.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListOOrdersValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(ListOOrders);

        LabelOOTotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LabelOOTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelOOTotal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        ButtonOAdd.setText("Add Item");
        ButtonOAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOAddActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Customer Details");

        LabelOITotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LabelOITotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelOITotal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        LabelOSummary.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LabelOSummary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelOSummary.setText("Order Summary");

        ButtonOFetch.setText("Fetch Orders");
        ButtonOFetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOFetchActionPerformed(evt);
            }
        });

        TextOWidth.setColumns(10);
        TextOWidth.setForeground(new java.awt.Color(127, 127, 127));
        TextOWidth.setText("Enter Width");
        TextOWidth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextOWidthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextOWidthFocusLost(evt);
            }
        });

        LabelOStatus.setForeground(new java.awt.Color(255, 0, 0));
        LabelOStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel1.setText("Phone Number");

        jLabel3.setText("Name");

        jLabel4.setText("ZIP Code");

        jLabel5.setText("Street");

        jLabel6.setText("City");

        jLabel7.setText("State");

        jLabel9.setText("Price (sqft)");

        jLabel10.setText("Description");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(LabelOSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LabelOPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(LabelOName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(LabelOZip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(LabelOCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(LabelOStreet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(LabelOState, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Label_Customer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboOCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Label_Product)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboOProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Button_Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(TextOLength, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(TextOWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(LabelOStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonOFetch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonOAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelOPName, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(LabelOPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(LabelOITotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelOOTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(185, 185, 185))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelOSummary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelOITotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelOOTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label_Customer)
                            .addComponent(ComboOCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(LabelOPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(LabelOName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(LabelOZip))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(LabelOCity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(LabelOStreet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(LabelOState))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboOProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_Product))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelOPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelOPName, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextOWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextOLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonOAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelOStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonOFetch)
                .addGap(37, 37, 37))
        );

        TabPane.addTab("Orders", jPanel1);

        ListProducts.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Flooring (Wood)", "Flooring (WeDontSellCarpet)" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListProducts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListProductsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListProducts);

        ButtonPAdd.setText("Add");
        ButtonPAdd.setToolTipText("Add a New Product");
        ButtonPAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPAddActionPerformed(evt);
            }
        });

        ButtonPDelete.setText("Delete");
        ButtonPDelete.setToolTipText("Delete the Selected Product");
        ButtonPDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPDeleteActionPerformed(evt);
            }
        });

        TextPName.setColumns(20);
        TextPName.setForeground(new java.awt.Color(127, 127, 127));
        TextPName.setText("Enter Product Description");
        TextPName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextPNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextPNameFocusLost(evt);
            }
        });

        TextPPrice.setColumns(10);
        TextPPrice.setForeground(new java.awt.Color(127, 127, 127));
        TextPPrice.setText("Enter Product Price");
        TextPPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextPPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextPPriceFocusLost(evt);
            }
        });

        LabelPStatus.setForeground(new java.awt.Color(255, 0, 0));
        LabelPStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PanelProductsLayout = new javax.swing.GroupLayout(PanelProducts);
        PanelProducts.setLayout(PanelProductsLayout);
        PanelProductsLayout.setHorizontalGroup(
            PanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelPStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelProductsLayout.createSequentialGroup()
                        .addGroup(PanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelProductsLayout.createSequentialGroup()
                                .addGroup(PanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TextPPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextPName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonPDelete))
                            .addComponent(ButtonPAdd))
                        .addGap(0, 337, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelProductsLayout.setVerticalGroup(
            PanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonPDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextPPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPAdd)
                .addGap(36, 36, 36)
                .addComponent(LabelPStatus)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        TabPane.addTab("Products", PanelProducts);

        ListCustomer.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListCustomerValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ListCustomer);

        TextCFName.setForeground(new java.awt.Color(127, 127, 127));
        TextCFName.setText("Enter First Name");
        TextCFName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCFNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCFNameFocusLost(evt);
            }
        });

        TextCLName.setForeground(new java.awt.Color(127, 127, 127));
        TextCLName.setText("Enter Last Name");
        TextCLName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCLNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCLNameFocusLost(evt);
            }
        });

        TextCSAddr.setForeground(new java.awt.Color(127, 127, 127));
        TextCSAddr.setText("Enter Street Address");
        TextCSAddr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCSAddrFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCSAddrFocusLost(evt);
            }
        });

        TextCCity.setForeground(new java.awt.Color(127, 127, 127));
        TextCCity.setText("Enter City");
        TextCCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCCityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCCityFocusLost(evt);
            }
        });

        TextCZip.setForeground(new java.awt.Color(127, 127, 127));
        TextCZip.setText("Enter Zip Code");
        TextCZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCZipFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCZipFocusLost(evt);
            }
        });

        ComboCState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY" }));

        ButtonCSave.setText("Save");
        ButtonCSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCSaveActionPerformed(evt);
            }
        });

        ButtonCClear.setText("Clear");
        ButtonCClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCClearActionPerformed(evt);
            }
        });

        ButtonCDelete.setText("Delete");
        ButtonCDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCDeleteActionPerformed(evt);
            }
        });

        TextCPhone.setForeground(new java.awt.Color(127, 127, 127));
        TextCPhone.setText("Enter Phone Number");
        TextCPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCPhoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCPhoneFocusLost(evt);
            }
        });

        LabelCStatus.setForeground(new java.awt.Color(255, 0, 0));
        LabelCStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelCStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(TextCFName, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TextCLName, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(TextCSAddr)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(TextCCity, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TextCZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ComboCState, 0, 1, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonCDelete))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ButtonCSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonCClear))
                            .addComponent(TextCPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 235, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCDelete))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextCFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextCLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextCSAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextCCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextCZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboCState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextCPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCSave)
                    .addComponent(ButtonCClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                .addComponent(LabelCStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabPane.addTab("Customers", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 607, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabPane)
        );
    }// </editor-fold>//GEN-END:initComponents
    //Resets the customer input fields to their default values
    private void CustomerClear(){
        //Revert to gray text
        this.TextCFName.setForeground(java.awt.Color.GRAY);
        this.TextCLName.setForeground(java.awt.Color.GRAY);
        this.TextCSAddr.setForeground(java.awt.Color.GRAY);
        this.TextCZip.setForeground(java.awt.Color.GRAY);
        this.TextCCity.setForeground(java.awt.Color.GRAY);
        this.TextCPhone.setForeground(java.awt.Color.GRAY);
        //Fill in text boxes with default values
        this.TextCFName.setText("Enter First Name");
        this.TextCLName.setText("Enter Last Name");
        this.TextCSAddr.setText("Enter Street Address");
        this.TextCCity.setText("Enter City");
        this.TextCZip.setText("Enter Zip Code");
        this.TextCPhone.setText("Enter Phone Number");
        this.ComboCState.setSelectedIndex(-1);
        //Clear any errors
        this.LabelCStatus.setText("");
    }
    
    private void ButtonCSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCSaveActionPerformed
        //Validate inputs. We shouldn't need to because of the way
        //focus on the input fields is handled, but will anyway
        if(this.TextCFName.getText().isEmpty()){
            this.LabelCStatus.setText("Customer's first name cannot be blank");
            return;
        }
        if(this.TextCLName.getText().isEmpty()){
            this.LabelCStatus.setText("Customer's Last name cannot be blank");
            return;
        }
        if(this.TextCSAddr.getText().isEmpty()){
            this.LabelCStatus.setText("Customer's street address cannot be blank");
            return;
        }
        if(this.TextCZip.getText().isEmpty() || this.TextCZip.getText().equals("Enter Zip Code")){
            this.LabelCStatus.setText("Customer's zip code cannot be blank");
            return;
        }
        if(this.ComboCState.getSelectedIndex() < 0){
            this.LabelCStatus.setText("You must select the customer's State");
            return;
        }
        if(this.TextCPhone.getText().isEmpty()){
            this.LabelCStatus.setText("Customer's phone number cannot be blank");
            return;
        }
        //Copy everything into vars for easier programming
        String FName = this.TextCFName.getText();
        String LName = this.TextCLName.getText();
        String SAddr = this.TextCSAddr.getText();
        String City = this.TextCCity.getText();
        int Zip = Integer.parseInt(this.TextCZip.getText());
        String Phone = this.TextCPhone.getText();
        String State = this.ComboCState.getItemAt(this.ComboCState.getSelectedIndex());
        //Enter the customer into the database
        Customer Customer = new Customer(FName, LName, SAddr, City, State, Zip, Phone);
        int ID = Database.InsertCustomer(Customer);
        if(ID < 0){
            System.out.println(Database.Error());
            System.exit(1);
        }
        Customer.ID(ID);
        //Update the GUI
        String ListString = Customer.LName() + ", " + Customer.FName().substring(0, 1) + ". (" + Customer.Zip() + ", " + Customer.State() + ")";
        CustomerList.addElement(ListString);
        Customer.ListString(ListString);
        Customers.add(Customer);
        //Clean up the mess
        CustomerClear();
    }//GEN-LAST:event_ButtonCSaveActionPerformed

    private void TextCFNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCFNameFocusGained
        if(this.TextCFName.getText().equals("Enter First Name")){
            this.TextCFName.setForeground(java.awt.Color.BLACK);
            this.TextCFName.setText("");
        }
    }//GEN-LAST:event_TextCFNameFocusGained

    private void TextCFNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCFNameFocusLost
        if(this.TextCFName.getText().isEmpty()){
            this.TextCFName.setForeground(java.awt.Color.GRAY);
            this.TextCFName.setText("Enter First Name");
        }
    }//GEN-LAST:event_TextCFNameFocusLost

    private void TextCLNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCLNameFocusGained
        if(this.TextCLName.getText().equals("Enter Last Name")){
            this.TextCLName.setForeground(java.awt.Color.BLACK);
            this.TextCLName.setText("");
        }
    }//GEN-LAST:event_TextCLNameFocusGained

    private void TextCLNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCLNameFocusLost
        if(this.TextCLName.getText().isEmpty()){
            this.TextCLName.setForeground(java.awt.Color.GRAY);
            this.TextCLName.setText("Enter Last Name");
        }
    }//GEN-LAST:event_TextCLNameFocusLost

    private void TextCSAddrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCSAddrFocusGained
        if(this.TextCSAddr.getText().equals("Enter Street Address")){
            this.TextCSAddr.setForeground(java.awt.Color.BLACK);
            this.TextCSAddr.setText("");
        }
    }//GEN-LAST:event_TextCSAddrFocusGained

    private void TextCSAddrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCSAddrFocusLost
        if(this.TextCSAddr.getText().isEmpty()){
            this.TextCSAddr.setForeground(java.awt.Color.GRAY);
            this.TextCSAddr.setText("Enter Street Address");
        }
    }//GEN-LAST:event_TextCSAddrFocusLost

    private void TextCCityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCCityFocusGained
        if(this.TextCCity.getText().equals("Enter City")){
            this.TextCCity.setForeground(java.awt.Color.BLACK);
            this.TextCCity.setText("");
        }
    }//GEN-LAST:event_TextCCityFocusGained

    private void TextCCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCCityFocusLost
        if(this.TextCCity.getText().isEmpty()){
            this.TextCCity.setForeground(java.awt.Color.GRAY);
            this.TextCCity.setText("Enter City");
        }
    }//GEN-LAST:event_TextCCityFocusLost

    private void TextCZipFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCZipFocusGained
        if(this.TextCZip.getText().equals("Enter Zip Code")){
            this.TextCZip.setForeground(java.awt.Color.BLACK);
            this.TextCZip.setText("");
        }
    }//GEN-LAST:event_TextCZipFocusGained

    private void TextCZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCZipFocusLost
        if(this.TextCZip.getText().isEmpty()){
            this.TextCZip.setForeground(java.awt.Color.GRAY);
            this.TextCZip.setText("Enter Zip Code");
        }
    }//GEN-LAST:event_TextCZipFocusLost

    private void TextCPhoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCPhoneFocusGained
        if(this.TextCPhone.getText().equals("Enter Phone Number")){
            this.TextCPhone.setForeground(java.awt.Color.BLACK);
            this.TextCPhone.setText("");
        }
    }//GEN-LAST:event_TextCPhoneFocusGained

    private void TextCPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCPhoneFocusLost
        if(this.TextCPhone.getText().isEmpty()){
            this.TextCPhone.setForeground(java.awt.Color.GRAY);
            this.TextCPhone.setText("Enter Phone Number");
        }
    }//GEN-LAST:event_TextCPhoneFocusLost

    private void ButtonCClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCClearActionPerformed
        CustomerClear();
    }//GEN-LAST:event_ButtonCClearActionPerformed

    private void ButtonCDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCDeleteActionPerformed
        int i = this.ListCustomer.getSelectedIndex();
        if(i > -1){
            String Customer = this.CustomerList.getElementAt(i);
            for(Customer C : this.Customers){
                if(C.ListString().equals(Customer)){
                    if(!this.Database.RemoveCustomer(C)){
                        System.out.println(this.Database.Error());
                        System.exit(1);
                    }
                    this.CustomerList.removeElement(C);
                    this.Customers.remove(C);
                    break;
                }
            }
            this.CustomerList.remove(i);
        }
    }//GEN-LAST:event_ButtonCDeleteActionPerformed

    private void ListCustomerValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListCustomerValueChanged
        int i = this.ListCustomer.getSelectedIndex();
        if(i > -1){
            String Customer = this.CustomerList.getElementAt(i);
            for(Customer C : this.Customers){
                if(C.ListString().equals(Customer)){
                    //Change the text color to black
                    this.TextCFName.setForeground(java.awt.Color.BLACK);
                    this.TextCLName.setForeground(java.awt.Color.BLACK);
                    this.TextCSAddr.setForeground(java.awt.Color.BLACK);
                    this.TextCCity.setForeground(java.awt.Color.BLACK);
                    this.TextCZip.setForeground(java.awt.Color.BLACK);
                    this.TextCPhone.setForeground(java.awt.Color.BLACK);
                    //Fill in all the fields
                    this.TextCFName.setText(C.FName());
                    this.TextCLName.setText(C.LName());
                    this.TextCSAddr.setText(C.Street());
                    this.TextCCity.setText(C.City());
                    this.TextCZip.setText(String.valueOf(C.Zip()));
                    this.TextCPhone.setText(C.Phone());
                    this.ComboCState.setSelectedItem(C.State());
                    //
                }
            }
        }
    }//GEN-LAST:event_ListCustomerValueChanged

    private void ButtonPAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPAddActionPerformed
        if(this.TextPName.getText().isEmpty()){
            this.LabelPStatus.setText("Product description cannot be blank");
            return;
        }
        if(this.TextPPrice.getText().isEmpty() || this.TextPPrice.getText().equals("Enter Product Price")){
            this.LabelPStatus.setText("Product price cannot be blank");
            return;
        }
        String Name = this.TextPName.getText();
        float Price = Float.parseFloat(this.TextPPrice.getText());
        Product Product = new Product(Name, Price);
        Database.InsertProduct(Product);
        ProductList.addElement(Name);
        Products.add(Product);
        //Clean up the mess
        this.TextPName.setForeground(java.awt.Color.GRAY);
        this.TextPPrice.setForeground(java.awt.Color.GRAY);
        this.TextPName.setText("Enter Product Desctription");
        this.TextPPrice.setText("Enter Product Price");
    }//GEN-LAST:event_ButtonPAddActionPerformed

    private void TextPNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextPNameFocusGained
        if(this.TextPName.getText().equals("Enter Product Description")){
            this.TextPName.setForeground(java.awt.Color.BLACK);
            this.TextPName.setText("");
        }
    }//GEN-LAST:event_TextPNameFocusGained

    private void TextPNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextPNameFocusLost
        if(this.TextPName.getText().isEmpty()){
            this.TextPName.setForeground(java.awt.Color.GRAY);
            this.TextPName.setText("Enter Product Description");
        }
    }//GEN-LAST:event_TextPNameFocusLost

    private void TextPPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextPPriceFocusGained
        if(this.TextPPrice.getText().equals("Enter Product Price")){
            this.TextPPrice.setForeground(java.awt.Color.BLACK);
            this.TextPPrice.setText("");
        }
    }//GEN-LAST:event_TextPPriceFocusGained

    private void TextPPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextPPriceFocusLost
        if(this.TextPPrice.getText().isEmpty()){
            this.TextPPrice.setForeground(java.awt.Color.GRAY);
            this.TextPPrice.setText("Enter Product Price");
        }
    }//GEN-LAST:event_TextPPriceFocusLost

    private void ListProductsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListProductsValueChanged
        int i = this.ListProducts.getSelectedIndex();
        if(i > -1){
            String Product = this.ProductList.getElementAt(i);
            for(Product P : this.Products){                    
                if(P.Name().equals(Product)){
                    //Change the text color to black
                    this.TextPName.setForeground(java.awt.Color.BLACK);
                    this.TextPPrice.setForeground(java.awt.Color.BLACK);
                    //Fill in all the fields
                    this.TextPName.setText(P.Name());
                    this.TextPPrice.setText(String.valueOf(P.Price()));
                    return;
                }
            }
        }
    }//GEN-LAST:event_ListProductsValueChanged

    private void ButtonPDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPDeleteActionPerformed
        int i = this.ListProducts.getSelectedIndex();
        if(i > -1){
            String Product = this.ProductList.getElementAt(i);
            for(Product P : this.Products){
                if(P.Name().equals(Product)){
                    if(!this.Database.RemoveProduct(P)){
                        System.out.println(this.Database.Error());
                        System.exit(1);
                    }
                    this.ProductList.remove(i);
                    this.Products.remove(P);
                    break;
                }
            }
        }
    }//GEN-LAST:event_ButtonPDeleteActionPerformed

    private void ButtonOAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOAddActionPerformed
        if(this.TextOLength.getText().isEmpty() || this.TextOLength.getText().equals("Enter Length")){
            this.LabelOStatus.setText("Length cannot be blank");
            return;
        }
        if(this.TextOWidth.getText().isEmpty() || this.TextOWidth.getText().equals("Enter Width")){
            this.LabelOStatus.setText("Width cannot be blank");
            return;
        }
        if(this.SelectedCustomer == null){
            this.LabelOStatus.setText("Select a customer to assign this order to");
            return;
        }
        if(this.SelectedProduct == null){
            this.LabelOStatus.setText("Select a product to add to this order");
            return;
        }
        this.LabelOSummary.setText("Order Summary");
        int Length = (int) Math.ceil(Double.parseDouble(this.TextOLength.getText()));
        int Width = (int) Math.ceil(Double.parseDouble(this.TextOWidth.getText()));
        if(this.Order == null){
            this.Order = new Order(this.SelectedCustomer.ID());
            this.OrderList.clear();
        }
        int Quantity = Length * Width;
        this.Order.AddItem(SelectedProduct, Quantity);
        //Update the GUI
        this.COrderList.addElement(SelectedProduct.Name() + " (" + String.valueOf(Quantity) + "sqft)");
        String Total = String.format("%.2f", this.Order.Total());
        this.LabelOOTotal.setText("Order Total: $" + Total);
        this.LabelOITotal.setText("");
        //Clean up the mess
        this.TextOLength.setForeground(java.awt.Color.GRAY);
        this.TextOWidth.setForeground(java.awt.Color.GRAY);
        this.TextOLength.setText("Enter Length");
        this.TextOWidth.setText("Enter Width");
        this.LabelOStatus.setText("");
        this.ListOOrders.setModel(COrderList);
    }//GEN-LAST:event_ButtonOAddActionPerformed

    private void TextOLengthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextOLengthFocusGained
        if(this.TextOLength.getText().equals("Enter Length")){
            this.TextOLength.setForeground(java.awt.Color.BLACK);
            this.TextOLength.setText("");
        }
    }//GEN-LAST:event_TextOLengthFocusGained

    private void TextOLengthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextOLengthFocusLost
        if(this.TextOLength.getText().isEmpty()){
            this.TextOLength.setForeground(java.awt.Color.GRAY);
            this.TextOLength.setText("Enter Length");
        }
    }//GEN-LAST:event_TextOLengthFocusLost

    private void TextOWidthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextOWidthFocusGained
        if(this.TextOWidth.getText().equals("Enter Width")){
            this.TextOWidth.setForeground(java.awt.Color.BLACK);
            this.TextOWidth.setText("");
        }
    }//GEN-LAST:event_TextOWidthFocusGained

    private void TextOWidthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextOWidthFocusLost
        if(this.TextOWidth.getText().isEmpty()){
            this.TextOWidth.setForeground(java.awt.Color.GRAY);
            this.TextOWidth.setText("Enter Width");
        }
    }//GEN-LAST:event_TextOWidthFocusLost

    private void ButtonOFetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOFetchActionPerformed
        //Fetch all orders from database and display them on the GUI
        this.OrderList.clear();
        this.Orders.clear();
        this.LabelOSummary.setText("All Orders");
        this.Orders = this.Database.Orders();
        if(this.Orders == null){
            System.out.println(this.Database.Error());
            System.exit(1);
        }
        for(Order O : Orders){
            Customer C = Database.Customer(O.Customer());
            if(C == null){
                System.out.println(this.Database.Error());
                System.exit(1);
            }
            String COrd = O.ID() + " " + C.LName() + ", " + C.FName().substring(0, 1) + ". (" + C.Zip() + ", " + C.State() + ")";
            this.OrderList.addElement(COrd);
        }
        this.ListOOrders.setModel(OrderList);
    }//GEN-LAST:event_ButtonOFetchActionPerformed

    private void ListOOrdersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListOOrdersValueChanged
        String Model = this.LabelOSummary.getText();
        String Order;
        int ID = this.ListOOrders.getSelectedIndex();
        switch(Model){
            case "Order Summary":
                Order = this.COrderList.getElementAt(ID);
                Order = Order.substring(0, Order.lastIndexOf(' '));
                for(int i = 0; i < this.Order.ItemCount(); i++){
                    Item I = this.Order.NextItem();
                    if(I == null){
                        break;
                    }
                    if(I.Product().Name().equals(Order)){
                        String Total = String.format("%.2f", I.Total());
                        this.LabelOITotal.setText("Item Total: $" + Total);
                    }
                }
            case "Customer Orders":
                
            case "All Orders":
//                //this.LabelOSummary.setText("Order Summary");
//                Order = this.OrderList.getElementAt(ID);
//                Order = Order.substring(0, Order.indexOf(' '));
//                Order O = Database.Order(Integer.parseInt(Order));
//                if(O == null){
//                    System.out.println(this.Database.Error());
//                    System.exit(1);
//                }
//                for(int i = 0; i < O.ItemCount(); i++){
//                    Product I = O.NextItem().Product();
//                    for(Product P : Products){
//                        if(I.ID() == P.ID()){
//                            
//                        }
//                    }
//                }
//                //this.ListOOrders.setModel(COrderList);
        }
    }//GEN-LAST:event_ListOOrdersValueChanged

    private void Button_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_SubmitActionPerformed
        if(this.Order == null || this.Order.ItemCount() < 1){
            this.LabelOStatus.setText("An empty order cannot be submitted");
        }
        if(!this.Database.InsertOrder(Order)){
            System.out.println(this.Database.Error());
            System.exit(1);
        }
        this.Order = null;
        this.ListOOrders.setModel(OrderList);
    }//GEN-LAST:event_Button_SubmitActionPerformed

// <editor-fold defaultstate="collapsed" desc="Generated Code">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCClear;
    private javax.swing.JButton ButtonCDelete;
    private javax.swing.JButton ButtonCSave;
    private javax.swing.JButton ButtonOAdd;
    private javax.swing.JButton ButtonOFetch;
    private javax.swing.JButton ButtonPAdd;
    private javax.swing.JButton ButtonPDelete;
    private javax.swing.JButton Button_Submit;
    private javax.swing.JComboBox<String> ComboCState;
    private javax.swing.JComboBox<String> ComboOCustomer;
    private javax.swing.JComboBox<String> ComboOProduct;
    private javax.swing.JLabel LabelCStatus;
    private javax.swing.JLabel LabelOCity;
    private javax.swing.JLabel LabelOITotal;
    private javax.swing.JLabel LabelOName;
    private javax.swing.JLabel LabelOOTotal;
    private javax.swing.JLabel LabelOPName;
    private javax.swing.JLabel LabelOPhone;
    private javax.swing.JLabel LabelOPrice;
    private javax.swing.JLabel LabelOState;
    private javax.swing.JLabel LabelOStatus;
    private javax.swing.JLabel LabelOStreet;
    private javax.swing.JLabel LabelOSummary;
    private javax.swing.JLabel LabelOZip;
    private javax.swing.JLabel LabelPStatus;
    private javax.swing.JLabel Label_Customer;
    private javax.swing.JLabel Label_Product;
    private javax.swing.JList<String> ListCustomer;
    private javax.swing.JList<String> ListOOrders;
    private javax.swing.JList<String> ListProducts;
    private javax.swing.JPanel PanelProducts;
    private javax.swing.JTabbedPane TabPane;
    private javax.swing.JTextField TextCCity;
    private javax.swing.JTextField TextCFName;
    private javax.swing.JTextField TextCLName;
    private javax.swing.JTextField TextCPhone;
    private javax.swing.JTextField TextCSAddr;
    private javax.swing.JTextField TextCZip;
    private javax.swing.JTextField TextOLength;
    private javax.swing.JTextField TextOWidth;
    private javax.swing.JTextField TextPName;
    private javax.swing.JTextField TextPPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
// </editor-fold> 
}
